{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestore","analytics","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","props","messageClass","src","App","useAuthState","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAWAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CAGT,IAAMC,EAAOR,IAASQ,OAChBC,EAAYT,IAASS,YAETT,IAASU,YAiB3B,SAASC,IAMP,OACE,qCACE,wBAAQC,UAAU,UAAUC,QAPP,WACvB,IAAMC,EAAW,IAAId,IAASQ,KAAKO,mBACnCP,EAAKQ,gBAAgBF,IAKnB,iCAGA,2CAKN,SAASG,IACP,OACET,EAAKU,aACH,wBAAQN,UAAU,WAAWC,QAAS,kBAAML,EAAKW,WAAjD,sBAON,SAASC,IACP,IAAMC,EAAQC,mBACRC,EAAcd,EAAUe,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAHnC,EAKCC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EALW,sBAOgBC,mBAAS,IAPzB,mBAOXC,EAPW,KAOAC,EAPA,KASZC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQ7B,EAAKU,YAAvBoB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAW1C,IAASS,UAAUkC,WAAWC,kBACzCN,MACAC,aATgB,OAYlBN,EAAa,IACbZ,EAAMwB,QAAQC,eAAe,CAAEC,SAAU,WAbvB,2CAAH,sDAgBjB,OACE,qCACE,iCACGjB,GACCA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAE5C,sBAAMC,IAAKhC,OAGb,uBAAMiC,SAAUpB,EAAhB,UACE,uBACEqB,MAAOvB,EACPwB,SAAU,SAAArB,GAAC,OAAIF,EAAaE,EAAEsB,OAAOF,QACrCG,YAAY,uBAGd,wBAAQC,KAAK,SAASC,UAAW5B,EAAjC,sCAQR,SAASkB,EAAYW,GAAQ,IAAD,EACMA,EAAMV,QAA9BV,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SAEbuB,EAAexB,IAAQ9B,EAAKU,YAAYoB,IAAM,OAAS,WAE7D,OACE,mCACE,sBAAK1B,UAAS,kBAAakD,GAA3B,UACE,qBACEC,IACExB,GAAY,0DAGhB,4BAAIE,SAMGuB,MA7Gf,WAAgB,IAAD,EACEC,YAAazD,GAArB0D,EADM,oBAGb,OACE,sBAAKtD,UAAU,MAAf,UACE,mCACE,sEACA,cAACK,EAAD,OAGF,kCAAUiD,EAAO,cAAC9C,EAAD,IAAe,cAACT,EAAD,UC9BtCwD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7d609078.chunk.js","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport \"./App.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/analytics\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDRYPQTDCD3wh5khe8TERN3KRSRgzi5FgI\",\n  authDomain: \"avinash-chat.firebaseapp.com\",\n  projectId: \"avinash-chat\",\n  storageBucket: \"avinash-chat.appspot.com\",\n  messagingSenderId: \"872945291110\",\n  appId: \"1:872945291110:web:2d83f1a24608dbc8e082a7\"\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n// eslint-disable-next-line\nconst analytics = firebase.analytics();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>‚öõÔ∏èüî•üí¨</h1>\n        <SignOut />\n      </header>\n\n      <section>{user ? <ChatRoom /> : <SignIn />}</section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  };\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>\n        Sign in with Google\n      </button>\n      <p>Welcome</p>\n    </>\n  );\n}\n\nfunction SignOut() {\n  return (\n    auth.currentUser && (\n      <button className=\"sign-out\" onClick={() => auth.signOut()}>\n        Sign Out\n      </button>\n    )\n  );\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection(\"messages\");\n  const query = messagesRef.orderBy(\"createdAt\").limit(25);\n\n  const [messages] = useCollectionData(query, { idField: \"id\" });\n\n  const [formValue, setFormValue] = useState(\"\");\n\n  const sendMessage = async e => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n\n    setFormValue(\"\");\n    dummy.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  return (\n    <>\n      <main>\n        {messages &&\n          messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n        <span ref={dummy}></span>\n      </main>\n\n      <form onSubmit={sendMessage}>\n        <input\n          value={formValue}\n          onChange={e => setFormValue(e.target.value)}\n          placeholder=\"say something nice\"\n        />\n\n        <button type=\"submit\" disabled={!formValue}>\n          üïäÔ∏è\n        </button>\n      </form>\n    </>\n  );\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? \"sent\" : \"received\";\n\n  return (\n    <>\n      <div className={`message ${messageClass}`}>\n        <img\n          src={\n            photoURL || \"https://api.adorable.io/avatars/23/abott@adorable.png\"\n          }\n        />\n        <p>{text}</p>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}